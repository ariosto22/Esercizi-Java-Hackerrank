https://www.hackerrank.com/challenges/java-priority-queue/problem?isFullScreen=true
(Provato a svolgere l'esercizio, sicuramente manca un pezzo di codice ma non riesco a capire quale)

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.PriorityQueue;

class Student {
    private String name;
    private int id;
    private double cgpa;
    
    public Student(int id, String name, double cgpa) {
        this.id = id;
        this.name = name;
        this.cgpa = cgpa;
    }
    
    public int getID() {
        return id;
    }
    
    public String getName() {
        return name;
    }
    
    public double getCGPA() {
        return cgpa;
    }
}

class Priorities {
    PriorityQueue<Student> queueStudent = new PriorityQueue<>();
    
    public List<Student> getStudents(List<String> events) {
        
        for(int i = 0; i < events.size(); i++) {
            
        if(events.get(i).equals("SERVED")) {
            queueStudent.poll();
            
        } else {
            List<String> aboutStudent = new ArrayList<>();
            aboutStudent.add(events.get(i));
            
            queueStudent.add(new Student(Integer.parseInt(aboutStudent.get(3)), aboutStudent.get(1), Double.parseDouble(aboutStudent.get(2))));
        }
    }
    
    List<Student> students = new ArrayList<>();
    while(!queueStudent.isEmpty()) {
        students.add(queueStudent.poll());
    }
    return students;
    
    }
    
}


public class Solution {
    private final static Scanner scan = new Scanner(System.in);
    private final static Priorities priorities = new Priorities();
    
    public static void main(String[] args) {
        int totalEvents = Integer.parseInt(scan.nextLine());    
        List<String> events = new ArrayList<>();
        
        while (totalEvents-- != 0) {
            String event = scan.nextLine();
            events.add(event);
        }
        
        List<Student> students = priorities.getStudents(events);
        
        if (students.isEmpty()) {
            System.out.println("EMPTY");
        } else {
            for (Student st: students) {
                System.out.println(st.getName());
            }
        }
    }
}